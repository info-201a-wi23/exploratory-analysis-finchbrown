geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
eis_survey_options <- na.omit(my_data[!is.na(my_data$x) & trimws(my_data$y) != "", ])
eis_survey_options <- na.omit(eis_survey_options[!is.na(eis_survey_options$information_sources) & trimws(eis_survey_options$occurences) != "", ])
ggplot(eis_survey_options, aes( x = information_sources, y = occurences)) +
geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
ggplot(eis_survey_options, aes( x = information_sources, y = occurences)) +
geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(stringr)
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
library(tidyverse)
library(stringr)
# pulling all columns answering the question about where people might find information on elections
election_information_sources <- respondent_info_df %>%
select(16:29)
# simplifying column names
colnames(election_information_sources) <- c("If you wanted to find information about elections, issues, and candidates, which of the following would you most likely use?", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13")
colnames(participation_history) <- c("Please tell us if you have done any of the following activities in the past 2 years.", "2", "3", "4", "5", "6", "7", "8", "9")
compiled_eis <- data.frame(a = unlist(election_information_sources, use.names = FALSE))
compiled_eis$a <- tolower(compiled_eis$a)
unique_eis <- unique(compiled_eis)
unique_eis <- compiled_eis %>%
group_by(a) %>%
summarize(count=n())
participation_history <- respondent_info_df %>%
select(31:39)
compiled_ph <- data.frame(a = unlist(participation_history, use.names = FALSE))
unique_ph <- unique(compiled_ph)
unique_ph <- compiled_ph %>%
group_by(a) %>%
summarize(count=n())
colnames(unique_ph) <- c("Please tell us if you have done any of the following activities in the past 2 years.", "occurances")
colnames(unique_eis) <- c("If you wanted to find information about elections, issues, and candidates, which of the following would you most likely use?", "occurances")
colnames(compiled_eis) <- c("If you wanted to find information about elections, issues, and candidates, which of the following would you most likely use?")
colnames(compiled_ph) <- c("Please tell us if you have done any of the following activities in the past 2 years.")
colnames(eis_survey_options) <- c("information_sources")
<<<<<<< HEAD
colnames(eis_survey_options) <- c("information_sources", "occurences")
colnames(eis_survey_options) <- c("information_sources", "occurances")
eis_survey_options <- unique_eis %>%
filter(occurances >= 20)
eis_survey_options <- data.frame(eis_survey_options)
eis_survey_options <- compiled_eis %>%
group_by(information_sources) %>%
summarize(count = n())
>>>>>>> a8f1fb9907745894d66047d769ea52e58b7997ad
library(dplyr)
ggplot(eis_survey_options, aes( x = information_sources, y = occurances)) +
geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
View(unique_eis)
ggplot(eis_survey_options, aes( x = unique_eis$`If you wanted to find information about elections, issues, and candidates, which of the following would you most likely use?`, y = occurances)) +
geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
View(unique_ph)
colnames(eis_survey_options) <- c("information_sources", "occurences")
colnames(eis_survey_options) <- c("information_sources", "occurances")
eis_survey_options <- unique_eis %>%
filter(occurances >= 20)
eis_survey_options <- data.frame(eis_survey_options)
eis_survey_options <- compiled_eis %>%
group_by(information_sources) %>%
summarize(count = n())
ggplot(eis_survey_options, aes( x = information_sources, y = occurances)) +
geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
View(eis_survey_options)
colnames(eis_survey_options) <- c("information_sources", "occurences")
library(dplyr)
ggplot(eis_survey_options, aes( x = information_sources, y = occurances)) +
geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
ggplot(eis_survey_options, aes( x = information_sources, y = occurences)) +
geom_bar(position="stack", stat="identity") +
labs(title = "Stacked Bar Graph of News Sources", x = "Sources"
, y = "Occurences")
library(ggplot2)
library(dplyr)
library(stringr)
library(ggplot2)
library(dplyr)
library(stringr)
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
library(ggplot2)
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
eis_survey_options <- eis_survey_options[-1,]
library(tidyverse)
library(stringr)
library(dplyr)
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(eis_survey_options, aes(y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
x="",
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = Information Sources of Elections)
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
ggplot(eis_survey_options, aes(x="", y= occurrences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
library(ggplot2)
ggplot(eis_survey_options, aes(x="", y= occurrences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
# Values from the Q8 column
differences_values <- respondent_info_df %>% count(Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., name = "Age")
# Make a scatterplot
ggplot(differences_values, aes(x = Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., y = Age)) +
geom_point(size = 3, shape = 21, fill = "blue", color = "black") +
labs(title = "How much of a difference do you think you can make in your neighborhood", x = "Age", y = "Occurances")
# Make a scatterplot
ggplot(differences_values, aes(x = Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., y = Age)) +
geom_point(size = 3, shape = 21, fill = "blue", color = "black") +
labs(title = "How much of a difference do you think you can make in your neighborhood", x = "Age", y = "Occurances")
# Values from the Q8 column
differences_values <- respondent_info_df %>% count(Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., name = "Age")
# Make a scatterplot
ggplot(differences_values, aes(x = Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., y = Age)) +
geom_point(size = 3, shape = 21, fill = "blue", color = "black") +
labs(title = "How much of a difference do you think you can make in your neighborhood", x = "Age", y = "Occurances")
# Values from the Q8 column
differences_values <- respondent_info_df %>% count(Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., name = "Age")
``````{r, echo = FALSE, code = readLines("Household_income_histogram")}
``````{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
``````{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
```{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
library(dplyr)
```{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
unique_ph <- unique(compiled_ph)
unique_ph <- compiled_ph %>%
group_by(a) %>%
summarize(count=n())
unique_ph <- unique(compiled_ph)
unique_ph <- compiled_ph %>%
group_by(a) %>%
summarize(count=n())
View(compiled_ph)
unique_ph <- compiled_ph %>%
group_by(compiled_ph$`Please tell us if you have done any of the following activities in the past 2 years.`) %>%
summarize(count=n())
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
library(ggplot2)
library(dplyr)
library(stringr)
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count", na.rm = TRUE)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count", na.rm = TRUE)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count", na.rm = TRUE)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"), na.rm = TRUE)
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count",)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count), na.rm = TRUE) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", fill = "blue", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_color_brewer(palette = BuGn)
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_color_brewer(palette = BuGn)
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_color_brewer(palette = BuGn)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_color_brewer(palette = BuGn)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = BuGn)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = BuGn)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "BuGn")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_color_brewer(palette = "BuGn")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "BuGn")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "Blues")
top_participation <- unique_ph %>%
filter(occurrences == max(occurrences, na.rm = TRUE)) %>%
pull(activities)
View(unique_ph)
colnames(unique_ph) <- c("activities", "occurrences")
top_participation <- unique_ph %>%
filter(occurrences == max(occurrences, na.rm = TRUE)) %>%
pull(activities)
top_ptn_number <- unique_ph %>%
filter(occurrences == max(occurrences, na.rm = TRUE)) %>%
pull(occurrences)
lowest_participation <- unique_ph %>%
filter(occurrences == min(occurrences, na.rm = TRUE)) %>%
pull(activities)
lowest_ptn_number <- unique_ph %>%
filter(occurrences == min(occurrences, na.rm = TRUE)) %>%
pull(occurrences)
lowest_ptn_number <- unique_ph %>%
filter(occurrences == min(occurrences, na.rm = TRUE)) %>%
pull(occurrences)
```{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
```{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
top_participation <- unique_ph %>%
filter(occurrences == max(occurrences, na.rm = TRUE)) %>%
pull(activities)
top_ptn_number <- unique_ph %>%
filter(occurrences == max(occurrences, na.rm = TRUE)) %>%
pull(occurrences)
lowest_participation <- unique_ph %>%
filter(occurrences == min(occurrences, na.rm = TRUE)) %>%
pull(activities)
lowest_ptn_number <- unique_ph %>%
filter(occurrences == min(occurrences, na.rm = TRUE)) %>%
pull(occurrences)
lowest_ptn_number <- unique_ph %>%
filter(occurrences == min(occurrences, na.rm = TRUE)) %>%
pull(occurrences)
```{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
library(stringr)
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "Blues")
```{r, echo = FALSE, code = readLines("Household_income_histogram.R")}
library("tidyverse")
library("tidyverse")
library("stringr")
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# pulling all columns answering the question about where people might find information on elections
election_information_sources <- respondent_info_df1 %>%
select(16:29)
compiled_eis <- data.frame(a = unlist(election_information_sources, use.names = FALSE))
compiled_eis$a <- tolower(compiled_eis$a)
unique_eis <- unique(compiled_eis)
unique_eis <- compiled_eis %>%
group_by(a) %>%
summarize(count=n())
participation_history <- respondent_info_df1 %>%
select(31:39)
compiled_ph <- data.frame(a = unlist(participation_history, use.names = FALSE))
unique_ph <- unique(compiled_ph)
unique_ph <- compiled_ph %>%
group_by(a) %>%
summarize(count=n())
# simplifying column names
colnames(election_information_sources) <- c("If you wanted to find information about elections, issues, and candidates, which of the following would you most likely use?", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13")
colnames(participation_history) <- c("Please tell us if you have done any of the following activities in the past 2 years.", "2", "3", "4", "5", "6", "7", "8", "9")
eis_survey_options <- unique_eis %>%
filter(occurrences >= 20)
eis_survey_options <- data.frame(eis_survey_options)
colnames(participation_history) <- c("Please tell us if you have done any of the following activities in the past 2 years.", "2", "3", "4", "5", "6", "7", "8", "9")
eis_survey_options <- unique_eis %>%
filter(occurrences >= 20)
colnames(unique_eis) <- c("If you wanted to find information about elections, issues, and candidates, which of the following would you most likely use?", "occurrences")
eis_survey_options <- unique_eis %>%
filter(occurrences >= 20)
eis_survey_options <- data.frame(eis_survey_options)
eis_survey_options <- compiled_eis %>%
group_by(information_sources) %>%
summarize(count = n())
eis_survey_options <- compiled_eis %>%
group_by(information_sources) %>%
summarize(count = n())
compiled_eis <- data.frame(a = unlist(election_information_sources, use.names = FALSE))
View(compiled_eis)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = reorder(count, +Value))) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "Blues")
# Count the number of unique values in the Q24 column
unique_income_brackets <- respondent_info_df1 %>% count(Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., name = "count")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = reorder(count, +Value))) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "Blues")
View(unique_income_brackets)
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = reorder(count, +Value))) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "Blues")
# Create the histogram
ggplot(unique_income_brackets, aes(x = Q24..What.was.your.total.combined.household.income.in.2015.before.taxes., y = count)) +
geom_histogram(stat = "identity", alpha = 0.8) +
labs(title = "Histogram of Household Income in 2015",
x = "Household Income in 2015",
y = "Occurences") + scale_fill_brewer(palette = "Blues")
# Make a bar graph
ggplot(differences_values, aes(x = Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., y = Age)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "How much of a difference do you think you can make in your neighborhood", x = "Age", y = "Number of Responses")
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(stringr)
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
respondent_info_df <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# Values from the Q8 column
differences_values <- respondent_info_df %>% count(Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., name = "Age")
# Make a bar graph
ggplot(differences_values, aes(x = Q08..Overall..how.much.of.a.difference.do.you.think.you.can.have.in.making.your.neighborhood.a.better.place.to.live., y = Age)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "How much of a difference do you think you can make in your neighborhood", x = "Age", y = "Number of Responses")
ggplot(eis_survey_options, aes(x="", y= occurences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
ggplot(eis_survey_options, aes(x="", y= occurrences, fill= information_sources)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
ggplot(eis_survey_options, aes(x="", y= occurrences, fill= eis_survey_options$If.you.wanted.to.find.information.about.elections..issues..and.candidates..which.of.the.following.would.you.most.likely.use.)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
ggplot(eis_survey_options, aes(x="", y= occurrences, fill= eis_survey_options$If.you.wanted.to.find.information.about.elections..issues..and.candidates..which.of.the.following.would.you.most.likely.use., na.rm = TRUE)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
labs(title = "Information Sources of Elections")
library("tidyverse")
library("tidyverse")
library("stringr")
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
library("tidyverse")
library("stringr")
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", stringsAsFactors = FALSE)
respondent_info_df1 <- read.csv("Seattle_Votes_Survey_Data_from_5_224_immigrant_and_refugee_residents_of_Seattle_King_County.csv", header=T, na.strings=c(""," ","NA"))
# pulling all columns answering the question about where people might find information on elections
election_information_sources <- respondent_info_df1 %>%
select(16:29)
compiled_eis <- data.frame(a = unlist(election_information_sources, use.names = FALSE))
compiled_eis$a <- tolower(compiled_eis$a)
unique_eis <- unique(compiled_eis)
unique_eis <- compiled_eis %>%
group_by(a) %>%
summarize(count=n())
participation_history <- respondent_info_df1 %>%
select(31:39)
compiled_ph <- data.frame(a = unlist(participation_history, use.names = FALSE))
unique_ph <- unique(compiled_ph)
unique_ph <- compiled_ph %>%
group_by(a) %>%
summarize(count=n())
# simplifying column names
colnames(election_information_sources) <- c("If you wanted to find information about elections, issues, and candidates, which of the following would you most likely use?", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13")
colnames(participation_history) <- c("Please tell us if you have done any of the following activities in the past 2 years.", "2", "3", "4", "5", "6", "7", "8", "9")
eis_survey_options <- unique_eis %>%
filter(occurrences >= 20)
eis_survey_options <- compiled_eis %>%
group_by(information_sources) %>%
summarize(count = n())
eis_survey_options <- unique_eis %>%
filter(occurrences >= 20)
View(unique_eis)
